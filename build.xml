<?xml version="1.0" encoding="UTF-8"?>
<project name="MyBatis Migrations" basedir="." default="db:migrate:status">

	<property file="build.properties" />
	<condition property="environment" value="${ENV}" else="${mybatis.default.environment}">
		<isset property="ENV" />
	</condition>
	<property file="${mybatis.env.dir}/${environment}.properties" />
	
	<path id="mybatis-classpath">
		<fileset dir="${mybatis.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="mybatis-drivers-classpath">
		<fileset dir="${mybatis.drivers.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<!-- Creates migrate task -->
	<macrodef name="migrate">
		<attribute name="command" />
		<attribute name="environment" default="${mybatis.default.environment}" />
		<attribute name="path" default="${mybatis.repository.dir}" />
		<element name="extraarguments" optional="true" />
		<sequential>
			<echo>** Executing "migrate @{command}" on "@{environment}" environment **</echo>
			<java classname="org.apache.ibatis.migration.Migrator"
				failonerror="true" fork="true" classpathref="mybatis-classpath">
				<sysproperty key="file.encoding" value="UTF-8"/>
				<arg value="@{command}" />
				<arg value="--env=@{environment}" />
				<arg value="--path=@{path}" />
				<extraarguments />
			</java>
		</sequential>
	</macrodef>

	<!-- Simulates the command: -->
	<!-- $ migrate init -->
	<target name="db:migrate:init">
		<migrate command="init" path="${mybatis.repository.dir}" />
	</target>
	
	<!-- Simulates the command: -->
	<!-- $ migrate new <description> -->
	<target name="db:migrate:new">
		<input addproperty="description" message="Description of the new migration:" />
		<migrate command="new" environment="${environment}" path="${mybatis.repository.dir}" >
			<extraarguments>
				<arg value="${description}" />
			</extraarguments>
		</migrate>
	</target>
	
	<!-- Simulates the command: -->
	<!-- $ migrate bootstrap -->
	<target name="db:migrate:bootstrap">
		<migrate command="bootstrap" environment="${environment}" path="${mybatis.repository.dir}" />
	</target>

	<!-- Simulates the command: -->
	<!-- $ migrate status -->
	<target name="db:migrate:status">
		<migrate command="status" environment="${environment}" />
	</target>

	<!-- Simulates the command: -->
	<!-- $ migrate up -->
	<target name="db:migrate:up">
		<migrate command="up" environment="${environment}" />
	</target>

	<!-- Simulates the command: -->
	<!-- $ migrate up -force -->
	<target name="db:migrate:up:force">
		<migrate command="up" environment="${environment}">
			<extraarguments>
				<arg value="--force" />
			</extraarguments>
		</migrate>
	</target>

	<!-- Simulates the command: -->
	<!-- $ migrate down -->
	<target name="db:migrate:down">
		<migrate command="down" environment="${environment}" />
	</target>
	
	<!-- Runs both tasks db:migrate:bootstrap and db:migrate:up -->
	<target name="db:migrate:setup" depends="db:migrate:bootstrap, db:migrate:up">
	</target>

</project>
